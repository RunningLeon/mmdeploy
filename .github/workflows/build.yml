name: build

on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_cpu_model_convert:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        torch: [1.8.0, 1.9.0]
        include:
          - torch: 1.8.0
            torchvision: 0.9.0
          - torch: 1.9.0
            torchvision: 0.10.0
    steps:
      - uses: actions/checkout@v2
      - name: Install PyTorch
        run: |
          python -m pip install --upgrade pip
          python -V
          python -m pip show pip
          python -m pip install torch==${{matrix.torch}}+cpu torchvision==${{matrix.torchvision}}+cpu -f https://download.pytorch.org/whl/torch_stable.html
      - name: Install unittest dependencies
        run: |
          python -m pip install openmim
          python -m pip install -r requirements.txt
          python -m pip install -r requirements/backends.txt
          python -m mim install "mmcv>=2.0.0"
          python -m mim install -r requirements/codebases.txt
          python -m pip install clip numba transformers numpy==1.23 albumentations
          python -m pip list
      - name: Install mmyolo
        run: |
          git clone -b dev --depth 1 https://github.com/open-mmlab/mmyolo.git /home/runner/work/mmyolo
          python -m pip install -v -e /home/runner/work/mmyolo
      - name: Install mmpose
        run: |
          git clone --depth 1 https://github.com/open-mmlab/mmpose.git /home/runner/work/mmpose
          python -m pip install -v -e /home/runner/work/mmpose
      - name: Build and install
        run: |
          rm -rf .eggs && python -m pip install -e .
          python tools/check_env.py
      - name: Run python unittests and generate coverage report
        run: |
          pytest tests/test_mmcv/test_mmcv_ops.py::test_ONNXNMSop
          coverage run --branch --source mmdeploy -m pytest -rsE tests
          coverage xml
          coverage report -m

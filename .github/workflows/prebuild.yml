name: prebuild

on:
  push:
    paths:
      - ".github/workflows/prebuild.yml"
  pull_request:
    paths:
      - ".github/workflows/prebuild.yml"

env:
  python_versions: 3.7 3.8 3.9 3.10

jobs:
  linux-x86_64_cu113_build:
    runs-on: [self-hosted, linux-3090]
    container:
      image: runningleon814/mmdeploy-base:manylinux2014_x86_64-cuda11.3
      options: "--gpus=all --ipc=host"
      volumes:
        - /data2/checkpoints:/__w/mmdeploy/mmdeploy_checkpoints
        - /data2/benchmark:/__w/mmdeploy/data
        - /data2/actions-runner/prebuild:/__w/mmdeploy/prebuild
    env:
      CONDA: /opt/conda
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-activate-base: false
          activate-environment: mmdeploy-3.6
      - name: Create python environment
        shell: bash -el {0}
        run: |
          conda info
          conda info -e
      - name: Build mmdeploy
        shell: bash -el {0}
        id: build
        run: |
          python -V
          conda activate mmdeploy-3.6
          pip install pyyaml packaging setuptools wheel
          pip install -r requirements/build.txt
          export MMDEPLOY_DIR=$(pwd)
          cd ../prebuild
          rm -rf *
          python $MMDEPLOY_DIR/tools/package_tools/mmdeploy_builder.py \
              $MMDEPLOY_DIR/tools/package_tools/configs/linux_x64.yaml $MMDEPLOY_DIR
          export onnxruntime_dirname=$(ls | grep  mmdeploy-*-onnxruntime*)
          export tensorrt_dirname=$(ls | grep  mmdeploy-*-tensorrt*)
          tar -czvf ./${onnxruntime_dirname}.tar.gz ${onnxruntime_dirname}
          tar -czvf ./${tensorrt_dirname}.tar.gz ${tensorrt_dirname}
          ls .
#      - uses: actions/upload-artifact@v3
#        with:
#          name: ${{ steps.build.outputs.pkgname }}
#          path: ${{ steps.build.outputs.pkgpath }}

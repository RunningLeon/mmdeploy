name: prebuild

on:
  push:
    paths:
      - ".github/workflows/prebuild.yml"
  pull_request:
    paths:
      - ".github/workflows/prebuild.yml"

permissions: write-all

jobs:
  run_prebuild_linux-x86_64_cu113:
    runs-on: [self-hosted, linux-3090]
    container:
      image: runningleon814/mmdeploy-base:manylinux2014_x86_64-cuda11.3
      options: "--gpus=all --ipc=host"
      volumes:
        - /data2/checkpoints:/__w/mmdeploy/mmdeploy_checkpoints
        - /data2/benchmark:/__w/mmdeploy/data
        - /data2/actions-runner/prebuild:/__w/mmdeploy/prebuild
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
#      - uses: conda-incubator/setup-miniconda@v2
#        with:
#          auto-activate-base: false
#          activate-environment: mmdeploy-3.6
      - name: Create python environment
        run: |
          conda info
          conda info -e
          source activate mmdeploy-3.6
          python -V
          python -m pip install pyyaml packaging setuptools wheel
          python -m pip install -r requirements/build.txt
      - name: Prebuild mmdeploy
        id: build
        run: |
          source activate mmdeploy-3.6
          python -V
          export MMDEPLOY_DIR=$(pwd)
          cd ../prebuild
          rm -rf *
          python $MMDEPLOY_DIR/tools/package_tools/mmdeploy_builder.py \
              $MMDEPLOY_DIR/tools/package_tools/configs/linux_x64.yaml $MMDEPLOY_DIR
          export onnxruntime_dirname=$(ls | grep  mmdeploy-*-onnxruntime*)
          export tensorrt_dirname=$(ls | grep  mmdeploy-*-tensorrt*)
          tar -czvf ./${onnxruntime_dirname}.tar.gz ${onnxruntime_dirname}
          tar -czvf ./${tensorrt_dirname}.tar.gz ${tensorrt_dirname}
          ls .
#      - uses: actions/upload-artifact@v3
#        with:
#          name: ${{ steps.build.outputs.pkgname }}
#          path: ${{ steps.build.outputs.pkgpath }}

  test_prebuild_linux-x86_64_cu113:
    runs-on: [self-hosted, linux-3090]
    #needs: [run_prebuild_linux-x86_64_cu113]
    container:
      image: openmmlab/mmdeploy:ubuntu20.04-cuda11.3
      options: "--gpus=all --ipc=host"
      volumes:
        - /data2/checkpoints:/__w/mmdeploy/mmdeploy_checkpoints
        - /data2/benchmark:/__w/mmdeploy/data
        - /data2/actions-runner/prebuild-archives:/__w/mmdeploy/prebuild
        #- /data2/actions-runner/prebuild:/__w/mmdeploy/prebuild
    defaults:
      run:
        shell: bash -el {0}
    env:
      PREBUILD_DIR: /__w/mmdeploy/temp_data
    steps:
      - name: Install dependencies
        run: |
          python3 -V
          #python3 -m pip install opencv-python==4.5.4.60 opencv-python-headless==4.5.4.60 opencv-contrib-python==4.5.4.60
          python3 -m pip install openmim
          python3 -m mim install "mmcls>=1.0.0rc2"
      - name: Install MMDeploy
        run: |
          python3 -V
          export PY_VERSION=$(python3 -V | awk '{print $2}' | awk '{split($0, a, "."); print a[1]a[2]}')
          mkdir -p /__w/mmdeploy/prebuild_dir
          tar -xzvf /__w/mmdeploy/prebuild/mmdeploy-*-onnxruntime*.tar.gz -C $PREBUILD_DIR
          cd $PREBUILD_DIR/mmdeploy-*
          python3 -m pip install ./dist/mmdeploy-*-linux_x86_64.whl
          python3 -m pip install ./sdk/python/mmdeploy_python-*-cp${PY_VERSION}-*-linux_x86_64.whl
          python3 -c 'import mmdeploy; print(mmdeploy.__version__)'
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Test MMDeploy
        run: |
          python3 -V
          cd $PREBUILD_DIR/mmdeploy-*
          export LD_LIBRARY_PATH=$(pwd)/sdk/lib:$LD_LIBRARY_PATH
          cd -
          bash .github/scripts/test_mmcls_full_pipeline.sh

  run_prebuild_cuda113_windows:
    runs-on: [self-hosted, win10-3080]
    defaults:
      run:
        shell: powershell
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Setup Python Environment
        run: |
          conda init powershell
          conda info
          conda info -e
          conda activate mmdeploy-3.6
          python -V
          python -m pip install pyyaml packaging setuptools wheel
          python -m pip install -r requirements/build.txt
      - name: Prebuild mmdeploy
        run: |
          python -V
          conda activate mmdeploy-3.6
          python -V
          $env:MMDEPLOY_DIR = "$pwd"
          cd D:\Runners\prebuild
          python $env:MMDEPLOY_DIR\tools\package_tools\mmdeploy_builder.py $env:MMDEPLOY_DIR\tools\package_tools\configs\windows_x64.yaml $env:MMDEPLOY_DIR

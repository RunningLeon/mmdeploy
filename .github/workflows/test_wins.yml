name: test_wins

on: [push, pull_request]

jobs:
  build_cuda118_windows:
    runs-on: [self-hosted, win10-3080]
    env:
      BASE_ENV: mmdeploy-cuda11.8-torch2.0-py38
    defaults:
      run:
        shell: powershell
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Setup Python Environment
        run: |
          echo "============================== Info =============================="
          echo "env:path= $env:path"
          echo "============================== Info =============================="
          conda info
          conda info -e
          $env:TEMP_ENV = "$pwd/../temp_envs/$env:GITHUB_RUN_ID"
          New-Item -Path "$env:TEMP_ENV" -ItemType Directory -Force
          echo "TEMP_ENV=$env:TEMP_ENV" >> $env:GITHUB_ENV
          conda create -p $env:TEMP_ENV --clone $env:BASE_ENV -y
          conda activate $env:TEMP_ENV
          python -V
          python -m pip install openmim
          python -m pip install -r requirements.txt
          python -m pip install -r requirements/backends.txt
          python -m mim install "mmpretrain>=1.0.0rc7"
          python -m pip list
      - name: Build mmdeploy
        run: |
          conda activate $env:TEMP_ENV
          python -V
          mkdir build
          cd build
          cmake ..  -A x64 -T v142,cuda=$env:CUDA_PATH `
            -DMMDEPLOY_BUILD_TEST=ON `
            -DMMDEPLOY_BUILD_SDK_CSHARP_API=ON `
            -DMMDEPLOY_BUILD_SDK_PYTHON_API=ON `
            -DMMDEPLOY_BUILD_SDK=ON `
            -DMMDEPLOY_TARGET_DEVICES='cuda' `
            -DMMDEPLOY_TARGET_BACKENDS='ort;trt' `
            -DMMDEPLOY_CODEBASES='all' `
            -Dpplcv_DIR="$env:pplcv_DIR" `
            -DOpenCV_DIR="$env:OpenCV_DIR" `
            -DTENSORRT_DIR="$env:TENSORRT_DIR" `
            -DONNXRUNTIME_DIR="$env:ONNXRUNTIME_GPU_DIR" `
            -DMMDEPLOY_BUILD_EXAMPLES=ON `
            -DCUDNN_DIR="$env:CUDNN_DIR"
          cmake --build . --config Release -- /m
          cmake --install . --config Release
          ls $pwd\bin\Release
      - name: Install mmdeploy converter
        run: |
          conda activate $env:TEMP_ENV
          python -m pip install -e .
          python .\tools\check_env.py
      - name: Test trt full pipeline
        run: |
          conda activate $env:TEMP_ENV
          $env:path = "$pwd\build\bin\Release;" + $env:path
          $env:path = "$env:ONNXRUNTIME_GPU_DIR\lib;" + $env:path
          echo $env:path
          .github\scripts\windows\test_full_pipeline.ps1 -Backend trt -Device cuda
#      - name: Clear temp env
#        if: always()
#        run: |
#          conda env remove --prefix "$env:TEMP_ENV"
